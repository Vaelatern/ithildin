// $Id: log.conf 605 2005-11-16 21:53:13Z wd $
// log module configuration file.

/* This file allows you to specify a handful of 'overall' options for
 * logging as well as a list of rules for logging data to different places. */

/* the default is to log files to the current working directory (i.e. from
 * wherever the program was executed from).  that is probably NOT suitable
 * for your needs.  you can change the directory that logfiles are placed in
 * by using the directory directive.  be warned that the module does not
 * create directories, so they must exist prior to execution! */
//directory "/some/path/you/log/to";

/* Log rotation time (0 is off -- the default) */
//rotate 1d;

/* Format of timestamps in logfiles (syslog has its own format).  Please
 * consult your system's strftime() documentation for information on this. */
//timestamp-format "[%Y-%m-%d %H:%M:%S]";

/* the default facility for syslog output.  right now only 'daemon', 'user',
 * and the 'localX' variants are accepted. */
syslog-facility daemon;

/* the name by which the process identifies itself in syslog.  by default
 * this will be the name the program was executed as (usually 'ithildin').
 * change if you like. */
//syslog-identity ithildin;

/* the file is also processed for a variable number of 'rules'.  if no rules
 * are specified then the log module outputs all data to syslog and makes an
 * attempt to decide what the message priorities are.  this is like loading
 * the old 'syslog' module.  below is an example set of rules: */

/*

rule {
    module "ircd*";                // log from any module matching 'ircd*'
    level error;                // log only messages at the error level
    file "ircd-errors.log";        // file to log to
    pass yes;                        // continue to next rule
};

rule {
    msg "*SSL*";                // log any message which matches this
    file "ssl.log";                // to this file
    syslog yes;                        // also log to syslog
    priority debug;                // at the 'debug' priority
    pass yes;                        // again, pass
};

rule {
    // this will match any message from any module
    level debug;
    ignore yes;                        // stop parsing rules, do nothing with this
                                // message.
};

rule {
    module "?*";                // do this to match any modules but not log
                                // entries generated from the base
                                // executable
    //rotate 1d;                // individual rules can have individual
                                // rotations
    //timestamp-format "%c";    // and individual timestamp formats.
    file "modules.log";
};

rule {
};                                // specify an empty rule to log everything
                                // else to syslog with deduced priority.

*/
