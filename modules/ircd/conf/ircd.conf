// $Id: ircd.conf 579 2005-08-21 06:38:18Z wd $

/*
** 'global' section:
** this section defines the 'global' settings of the IRC server, each one is
** described as it is laid out.
*/

global {
    name "your.server.name.here";
    network "your-network-here";
    //address 192.168.42.1; // the ip of the server
    ports 6660-6669,7000,7325; // the port(s) it runs on
    info "your info here"; // the gecos information
    /*
    ** admin sub-section,
    ** each line designates additional administrative information.  Only
    ** one line is required.
    */
    admin {
        "your";
        "info";
        "here";
    };
};

/*
** protocols section
** this simply defines a list of protocols you will support, you must
** also add modules for these protocols in your module configuration
** file.  you should ALWAYS put the 'unknown' protocol first.
*/
protocols {
    rfc1459;
    bahamut14; // the server<->server protocol for bahamut 1.4.34+ servers
};

/*
** supported commands to load.  you may want to chuck this section in
** another file,  it can get pretty long.  however, a lot of commands are
** loaded by modules that need them.
*/
$INCLUDE ircd/commands.conf;

/*
** addons to load.  stuff like ACLs and other friends (spamguarders and the
** like) are addons
*/
addon acl;
// acl section included from acl.conf
$INCLUDE ircd/acl.conf;
        
addon core; // core support for some channel modes and commands

/*
** message sets
** these are message groupings which allow you to reformat a lot of the text
** sent to a client.  You can $INCLUDE another file to fill in the data,
** and you need not add a new message for every type!  I recommend creating
** the first (default) set from nothing (thereby using all defaults)
*/
message-set default {};

/*
** privilege sets
** these are sets of privileges granted to users.  they work in a manner very
** similar to the message set system.  Additionally, you can 'include' one
** privilege set in another (settings are overriden from a top-down
** perspective) by simply doing "include <name-of-privilege-set>;'.  It is 
** recommended that you create the first (default) set using all the defaults,
** and then create your own per-class definitions. 
*/
privilege-set default {};

/*
** class section
** defines connection classes for users, required fields are
** name, ping, max, and sendq (all of them
*/

// you should put the default class at the top of the file.
class default {
    ping 180;
    max 600;
    sendq 102400;
};

class server {
    ping 300;
    max 0;
    sendq 10485760; // big send queue for servers
};

class clients {
    ping 180; // ping timeout frequency
    max 2000; // maximum connections belonging to this class
    sendq 51200; // maximum sendq items for this class.
    flood 60; // set a lowish value, if you see too many innocents flooding
              // off try raising this to 80-100
};

class ereet {
    ping 300; // give them more time
    max 0; // there is no soft limit on users in this class
    sendq 1048576; // enormous sendqs.
    flood 0; // no flooding off for them.

    //hostmask "some.host.name";
    // the 'hostmask' addon allows you to mask users' hostnames if they
    // connect in this class.  it is not loaded by default.
};

/*
** operator stuff below
*/

privilege-set oper {
    maxchannels 0; // no limit
    see-hidden-channels yes;
    who-see-invisible yes;
    who-reply-limit 0;
    kill global;
    connect remote;
    squit remote;
    operator yes; // this is an operator class
};

operator you {
    host "ident@some.host"; // hostnames work
    host "127.0.0.1/8";            // so do CIDR masks

    pass "md5-password";
    class "ereet";
    privilege-set oper;
};

/*
** server stuff below
*/
server your.uplink.here {
    address "192.168.42.254";
    port 4000;
    interval 3m; // try and connect every three minutes
    protocol bahamut14;
    theirpass "their-plaintext-password";
    ourpass "our-plaintext-password";
    hub *; // lets them hub anything.
    class server; // be sure to set a server class!
};

